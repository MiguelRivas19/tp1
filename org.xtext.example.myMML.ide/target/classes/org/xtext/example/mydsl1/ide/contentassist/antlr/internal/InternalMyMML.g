/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyMML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.MyMMLGrammarAccess;

}
@parser::members {
	private MyMMLGrammarAccess grammarAccess;

	public void setGrammarAccess(MyMMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMMLGenerator
entryRuleMMLGenerator
:
{ before(grammarAccess.getMMLGeneratorRule()); }
	 ruleMMLGenerator
{ after(grammarAccess.getMMLGeneratorRule()); } 
	 EOF 
;

// Rule MMLGenerator
ruleMMLGenerator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMMLGeneratorAccess().getGroup()); }
		(rule__MMLGenerator__Group__0)
		{ after(grammarAccess.getMMLGeneratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getPutInParserRuleCall()); }
		rulePutIn
		{ after(grammarAccess.getInstructionAccess().getPutInParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStrategySet
entryRuleStrategySet
:
{ before(grammarAccess.getStrategySetRule()); }
	 ruleStrategySet
{ after(grammarAccess.getStrategySetRule()); } 
	 EOF 
;

// Rule StrategySet
ruleStrategySet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStrategySetAccess().getGroup()); }
		(rule__StrategySet__Group__0)
		{ after(grammarAccess.getStrategySetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResultDisplayParamsSet
entryRuleResultDisplayParamsSet
:
{ before(grammarAccess.getResultDisplayParamsSetRule()); }
	 ruleResultDisplayParamsSet
{ after(grammarAccess.getResultDisplayParamsSetRule()); } 
	 EOF 
;

// Rule ResultDisplayParamsSet
ruleResultDisplayParamsSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultDisplayParamsSetAccess().getGroup()); }
		(rule__ResultDisplayParamsSet__Group__0)
		{ after(grammarAccess.getResultDisplayParamsSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePutIn
entryRulePutIn
:
{ before(grammarAccess.getPutInRule()); }
	 rulePutIn
{ after(grammarAccess.getPutInRule()); } 
	 EOF 
;

// Rule PutIn
rulePutIn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPutInAccess().getGroup()); }
		(rule__PutIn__Group__0)
		{ after(grammarAccess.getPutInAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFileSet
entryRuleFileSet
:
{ before(grammarAccess.getFileSetRule()); }
	 ruleFileSet
{ after(grammarAccess.getFileSetRule()); } 
	 EOF 
;

// Rule FileSet
ruleFileSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileSetAccess().getGroup()); }
		(rule__FileSet__Group__0)
		{ after(grammarAccess.getFileSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredictiveColumns
entryRulePredictiveColumns
:
{ before(grammarAccess.getPredictiveColumnsRule()); }
	 rulePredictiveColumns
{ after(grammarAccess.getPredictiveColumnsRule()); } 
	 EOF 
;

// Rule PredictiveColumns
rulePredictiveColumns 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredictiveColumnsAccess().getGroup()); }
		(rule__PredictiveColumns__Group__0)
		{ after(grammarAccess.getPredictiveColumnsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCibleColumn
entryRuleCibleColumn
:
{ before(grammarAccess.getCibleColumnRule()); }
	 ruleCibleColumn
{ after(grammarAccess.getCibleColumnRule()); } 
	 EOF 
;

// Rule CibleColumn
ruleCibleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCibleColumnAccess().getGroup()); }
		(rule__CibleColumn__Group__0)
		{ after(grammarAccess.getCibleColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestValueSize
entryRuleTestValueSize
:
{ before(grammarAccess.getTestValueSizeRule()); }
	 ruleTestValueSize
{ after(grammarAccess.getTestValueSizeRule()); } 
	 EOF 
;

// Rule TestValueSize
ruleTestValueSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestValueSizeAccess().getGroup()); }
		(rule__TestValueSize__Group__0)
		{ after(grammarAccess.getTestValueSizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrainValueSize
entryRuleTrainValueSize
:
{ before(grammarAccess.getTrainValueSizeRule()); }
	 ruleTrainValueSize
{ after(grammarAccess.getTrainValueSizeRule()); } 
	 EOF 
;

// Rule TrainValueSize
ruleTrainValueSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrainValueSizeAccess().getGroup()); }
		(rule__TrainValueSize__Group__0)
		{ after(grammarAccess.getTrainValueSizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithmSet
entryRuleAlgorithmSet
:
{ before(grammarAccess.getAlgorithmSetRule()); }
	 ruleAlgorithmSet
{ after(grammarAccess.getAlgorithmSetRule()); } 
	 EOF 
;

// Rule AlgorithmSet
ruleAlgorithmSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmSetAccess().getGroup()); }
		(rule__AlgorithmSet__Group__0)
		{ after(grammarAccess.getAlgorithmSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Algo
ruleAlgo
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgoAccess().getAlternatives()); }
		(rule__Algo__Alternatives)
		{ after(grammarAccess.getAlgoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Strategy
ruleStrategy
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategyAccess().getAlternatives()); }
		(rule__Strategy__Alternatives)
		{ after(grammarAccess.getStrategyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DisplayParams
ruleDisplayParams
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisplayParamsAccess().getAlternatives()); }
		(rule__DisplayParams__Alternatives)
		{ after(grammarAccess.getDisplayParamsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getFileSetParserRuleCall_0()); }
		ruleFileSet
		{ after(grammarAccess.getElementAccess().getFileSetParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getPredictiveColumnsParserRuleCall_1()); }
		rulePredictiveColumns
		{ after(grammarAccess.getElementAccess().getPredictiveColumnsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getCibleColumnParserRuleCall_2()); }
		ruleCibleColumn
		{ after(grammarAccess.getElementAccess().getCibleColumnParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTestValueSizeParserRuleCall_3()); }
		ruleTestValueSize
		{ after(grammarAccess.getElementAccess().getTestValueSizeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTrainValueSizeParserRuleCall_4()); }
		ruleTrainValueSize
		{ after(grammarAccess.getElementAccess().getTrainValueSizeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getAlgorithmSetParserRuleCall_5()); }
		ruleAlgorithmSet
		{ after(grammarAccess.getElementAccess().getAlgorithmSetParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algo__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgoAccess().getDecisionTreeClassifierEnumLiteralDeclaration_0()); }
		('DecisionTreeClassifier')
		{ after(grammarAccess.getAlgoAccess().getDecisionTreeClassifierEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlgoAccess().getSVMEnumLiteralDeclaration_1()); }
		('SVM')
		{ after(grammarAccess.getAlgoAccess().getSVMEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlgoAccess().getJ48EnumLiteralDeclaration_2()); }
		('J48')
		{ after(grammarAccess.getAlgoAccess().getJ48EnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAlgoAccess().getNaiveBayesEnumLiteralDeclaration_3()); }
		('NaiveBayes')
		{ after(grammarAccess.getAlgoAccess().getNaiveBayesEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strategy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategyAccess().getTrainingTestEnumLiteralDeclaration_0()); }
		('TrainingTest')
		{ after(grammarAccess.getStrategyAccess().getTrainingTestEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getStrategyAccess().getCrossValidationEnumLiteralDeclaration_1()); }
		('CrossValidation')
		{ after(grammarAccess.getStrategyAccess().getCrossValidationEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DisplayParams__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisplayParamsAccess().getPrecisionEnumLiteralDeclaration_0()); }
		('Precision')
		{ after(grammarAccess.getDisplayParamsAccess().getPrecisionEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDisplayParamsAccess().getRecallEnumLiteralDeclaration_1()); }
		('Recall')
		{ after(grammarAccess.getDisplayParamsAccess().getRecallEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDisplayParamsAccess().getF1EnumLiteralDeclaration_2()); }
		('f1')
		{ after(grammarAccess.getDisplayParamsAccess().getF1EnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MMLGenerator__Group__0__Impl
	rule__MMLGenerator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMLGeneratorAccess().getStrategySetAssignment_0()); }
	(rule__MMLGenerator__StrategySetAssignment_0)
	{ after(grammarAccess.getMMLGeneratorAccess().getStrategySetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MMLGenerator__Group__1__Impl
	rule__MMLGenerator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMLGeneratorAccess().getInstructionsAssignment_1()); }
	(rule__MMLGenerator__InstructionsAssignment_1)*
	{ after(grammarAccess.getMMLGeneratorAccess().getInstructionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MMLGenerator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMLGeneratorAccess().getResultDisplayParamsSetAssignment_2()); }
	(rule__MMLGenerator__ResultDisplayParamsSetAssignment_2)
	{ after(grammarAccess.getMMLGeneratorAccess().getResultDisplayParamsSetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StrategySet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategySet__Group__0__Impl
	rule__StrategySet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategySet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategySetAccess().getStrategySetKeyword_0()); }
	'strategySet'
	{ after(grammarAccess.getStrategySetAccess().getStrategySetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategySet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategySet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategySet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategySetAccess().getStrategyAssignment_1()); }
	(rule__StrategySet__StrategyAssignment_1)
	{ after(grammarAccess.getStrategySetAccess().getStrategyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResultDisplayParamsSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDisplayParamsSet__Group__0__Impl
	rule__ResultDisplayParamsSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDisplayParamsSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDisplayParamsSetAccess().getResultDisplayParamsSetKeyword_0()); }
	'ResultDisplayParamsSet'
	{ after(grammarAccess.getResultDisplayParamsSetAccess().getResultDisplayParamsSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDisplayParamsSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDisplayParamsSet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDisplayParamsSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getResultDisplayParamsSetAccess().getParamsAssignment_1()); }
		(rule__ResultDisplayParamsSet__ParamsAssignment_1)
		{ after(grammarAccess.getResultDisplayParamsSetAccess().getParamsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getResultDisplayParamsSetAccess().getParamsAssignment_1()); }
		(rule__ResultDisplayParamsSet__ParamsAssignment_1)*
		{ after(grammarAccess.getResultDisplayParamsSetAccess().getParamsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PutIn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PutIn__Group__0__Impl
	rule__PutIn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PutIn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPutInAccess().getPutInKeyword_0()); }
	'putIn'
	{ after(grammarAccess.getPutInAccess().getPutInKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PutIn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PutIn__Group__1__Impl
	rule__PutIn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PutIn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPutInAccess().getPutIdAssignment_1()); }
	(rule__PutIn__PutIdAssignment_1)
	{ after(grammarAccess.getPutInAccess().getPutIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PutIn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PutIn__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PutIn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPutInAccess().getValueAssignment_2()); }
	(rule__PutIn__ValueAssignment_2)
	{ after(grammarAccess.getPutInAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FileSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileSet__Group__0__Impl
	rule__FileSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileSetAccess().getFileSetKeyword_0()); }
	'fileSet'
	{ after(grammarAccess.getFileSetAccess().getFileSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileSet__Group__1__Impl
	rule__FileSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileSetAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getFileSetAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileSet__Group__2__Impl
	rule__FileSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileSetAccess().getTextAssignment_2()); }
	(rule__FileSet__TextAssignment_2)
	{ after(grammarAccess.getFileSetAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileSetAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getFileSetAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredictiveColumns__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredictiveColumns__Group__0__Impl
	rule__PredictiveColumns__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredictiveColumnsAccess().getPredictiveColumnsKeyword_0()); }
	'predictiveColumns'
	{ after(grammarAccess.getPredictiveColumnsAccess().getPredictiveColumnsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredictiveColumns__Group__1__Impl
	rule__PredictiveColumns__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredictiveColumnsAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getPredictiveColumnsAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredictiveColumns__Group__2__Impl
	rule__PredictiveColumns__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredictiveColumnsAccess().getColumnAssignment_2()); }
	(rule__PredictiveColumns__ColumnAssignment_2)
	{ after(grammarAccess.getPredictiveColumnsAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredictiveColumns__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredictiveColumnsAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getPredictiveColumnsAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CibleColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CibleColumn__Group__0__Impl
	rule__CibleColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCibleColumnAccess().getCibleColumnKeyword_0()); }
	'CibleColumn'
	{ after(grammarAccess.getCibleColumnAccess().getCibleColumnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CibleColumn__Group__1__Impl
	rule__CibleColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCibleColumnAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getCibleColumnAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CibleColumn__Group__2__Impl
	rule__CibleColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCibleColumnAccess().getColumnAssignment_2()); }
	(rule__CibleColumn__ColumnAssignment_2)
	{ after(grammarAccess.getCibleColumnAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CibleColumn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCibleColumnAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getCibleColumnAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestValueSize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestValueSize__Group__0__Impl
	rule__TestValueSize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestValueSizeAccess().getTestValueSizeKeyword_0()); }
	'testValueSize'
	{ after(grammarAccess.getTestValueSizeAccess().getTestValueSizeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestValueSize__Group__1__Impl
	rule__TestValueSize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestValueSizeAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getTestValueSizeAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestValueSize__Group__2__Impl
	rule__TestValueSize__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestValueSizeAccess().getSizeAssignment_2()); }
	(rule__TestValueSize__SizeAssignment_2)
	{ after(grammarAccess.getTestValueSizeAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestValueSize__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestValueSizeAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getTestValueSizeAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TrainValueSize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrainValueSize__Group__0__Impl
	rule__TrainValueSize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainValueSize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainValueSizeAccess().getTrainValueSizeKeyword_0()); }
	'trainValueSize'
	{ after(grammarAccess.getTrainValueSizeAccess().getTrainValueSizeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainValueSize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrainValueSize__Group__1__Impl
	rule__TrainValueSize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainValueSize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainValueSizeAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getTrainValueSizeAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainValueSize__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrainValueSize__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainValueSize__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainValueSizeAccess().getSizeAssignment_2()); }
	(rule__TrainValueSize__SizeAssignment_2)
	{ after(grammarAccess.getTrainValueSizeAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlgorithmSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSet__Group__0__Impl
	rule__AlgorithmSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSetAccess().getAlgorithmSetKeyword_0()); }
	'algorithmSet'
	{ after(grammarAccess.getAlgorithmSetAccess().getAlgorithmSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSet__Group__1__Impl
	rule__AlgorithmSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSetAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getAlgorithmSetAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSet__Group__2__Impl
	rule__AlgorithmSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSetAccess().getAlgoNameAssignment_2()); }
	(rule__AlgorithmSet__AlgoNameAssignment_2)
	{ after(grammarAccess.getAlgorithmSetAccess().getAlgoNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSetAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getAlgorithmSetAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MMLGenerator__StrategySetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMLGeneratorAccess().getStrategySetStrategySetParserRuleCall_0_0()); }
		ruleStrategySet
		{ after(grammarAccess.getMMLGeneratorAccess().getStrategySetStrategySetParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__InstructionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMLGeneratorAccess().getInstructionsInstructionParserRuleCall_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getMMLGeneratorAccess().getInstructionsInstructionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMLGenerator__ResultDisplayParamsSetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMLGeneratorAccess().getResultDisplayParamsSetResultDisplayParamsSetParserRuleCall_2_0()); }
		ruleResultDisplayParamsSet
		{ after(grammarAccess.getMMLGeneratorAccess().getResultDisplayParamsSetResultDisplayParamsSetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategySet__StrategyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategySetAccess().getStrategyStrategyEnumRuleCall_1_0()); }
		ruleStrategy
		{ after(grammarAccess.getStrategySetAccess().getStrategyStrategyEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDisplayParamsSet__ParamsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultDisplayParamsSetAccess().getParamsDisplayParamsEnumRuleCall_1_0()); }
		ruleDisplayParams
		{ after(grammarAccess.getResultDisplayParamsSetAccess().getParamsDisplayParamsEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PutIn__PutIdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPutInAccess().getPutIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPutInAccess().getPutIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PutIn__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPutInAccess().getValueElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getPutInAccess().getValueElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSet__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileSetAccess().getTextSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFileSetAccess().getTextSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredictiveColumns__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredictiveColumnsAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getPredictiveColumnsAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CibleColumn__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCibleColumnAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCibleColumnAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestValueSize__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestValueSizeAccess().getSizeINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTestValueSizeAccess().getSizeINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainValueSize__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrainValueSizeAccess().getSizeGreaterThanSignKeyword_2_0()); }
		(
			{ before(grammarAccess.getTrainValueSizeAccess().getSizeGreaterThanSignKeyword_2_0()); }
			'>'
			{ after(grammarAccess.getTrainValueSizeAccess().getSizeGreaterThanSignKeyword_2_0()); }
		)
		{ after(grammarAccess.getTrainValueSizeAccess().getSizeGreaterThanSignKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSet__AlgoNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmSetAccess().getAlgoNameAlgoEnumRuleCall_2_0()); }
		ruleAlgo
		{ after(grammarAccess.getAlgorithmSetAccess().getAlgoNameAlgoEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
